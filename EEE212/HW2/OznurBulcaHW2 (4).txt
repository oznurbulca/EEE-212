ORG 0
LJMP MAIN
ORG 000BH
LJMP WAVEFORM1
ORG 001BH
LJMP WAVEFORM2
ORG 0030H
MAIN:	MOV R7, #3
	acall	CONFIGURE_LCD
	MOV A,#'f'
	acall SEND_DATA
	MOV A,#'='
	acall SEND_DATA
	MOVE1:acall KEYBOARD
	PUSH A
	ACALL SEND_DATA
	acall DELAY
	DJNZ R7, MOVE1
	MOV A,#' '
	acall SEND_DATA
	MOV A,#'H'
	acall SEND_DATA
	MOV A,#'z'
	acall SEND_DATA
MOV R7, #2
AGAIN2:	acall	CONFIGURE_LCD2
	MOV A,#'D'
	acall SEND_DATA
	MOV A,#'='
	acall SEND_DATA
	MOVE2:acall KEYBOARD
	PUSH A
	ACALL SEND_DATA
	acall DELAY
	DJNZ R7, MOVE2
	MOV A,#' '
	acall SEND_DATA
	MOV A,#'%'
	acall SEND_DATA

FORD: 	 POP ACC
	 ANL A,#0FH
	 MOV 50H, A
	 POP ACC
	 ANL A,#0FH
	 MOV B, #10
	 MUL AB
	 ADD A, 50H
	 MOV R7, A ; DUTY IN R7
	 
FORF: 	 POP ACC
	 ANL A,#0FH
	 MOV 50H, A
	 POP ACC
	 ANL A,#0FH
	 MOV B, #10
	 MUL AB
	 ADD A, 50H
	 MOV 50H, A
	 MOV B ,#100
	 POP ACC
	 ANL A,#0FH
	 MUL AB
	 ADD A, 50H
	 MOV R6, A ;FREQ IN R6
	
MOV 60H,R7
MOV 61H, R6
LCALL PROGRAM
MOV 42H, R2
MOV 41H, R1
MOV TH0, R2
MOV TL0, R1
FREQWAVEFORM2:MOV A, R6
	   MOV B , #3
	   MUL AB
	   MOV R6, A
	   MOV A, B
	   CJNE A, #1, ZZ
	   MOV R6, #0FFH
ZZ:LCALL PROGRAM
MOV 44H, R2
MOV 43H, R1
MOV TH1, R2
MOV TL1, R1
SETB TR1
SETB TR0
MOV TMOD, #11H
MOV IE, #8AH
SJMP $
WAVEFORM1: MOV R2, 42H
MOV R1, 41H
TWENTY: CJNE R7, #20, THIRTY
TWENTYHERE:CJNE R5, #17, TWENTYHERE1
	SJMP TWENTYCOMP
	TWENTYHERE1: JNC TWENTYCOMP
	CLR TR0
	SETB P2.4
;	LCALL PROGRAM
	MOV TH0, R2
	MOV TL0, R1
	INC R5
	SETB TR0
	RETI
	TWENTYCOMP: CJNE R5, #83, TWENTYCOMP1
	MOV R5, #0
	SETB P2.4
	INC 78H
	MOV A, 78H
	CJNE A, #4, NEXT
	CLR P2.6
	SJMP TWENTYHERE
	NEXT:JNC LAR
	SETB P2.6
	SJMP TWENTYHERE
	LAR: CLR P2.6
	CJNE A, #20, NEXT1
	SETB P2.6
	MOV 78H, #0
	SJMP TWENTYHERE
	NEXT1: 
	SJMP TWENTYHERE
	TWENTYCOMP1:CLR TR0
	MOV TH0, R2
	MOV TL0, R1
	CLR P2.4
	INC R5
	SETB TR0
	RETI
THIRTY: CJNE R7, #30, FOURTY
THIRTYHERE:CJNE R5, #25, THIRTYHERE1
	SJMP THIRTYCOMP
	THIRTYHERE1: JNC THIRTYCOMP
	CLR TR0
	SETB P2.4
	;LCALL PROGRAM
	MOV TH0, R2
	MOV TL0, R1
	INC R5
	SETB TR0
	RETI
	THIRTYCOMP: CJNE R5, #83, THIRTYCOMP1
	MOV R5, #0
	SETB P2.4
	INC 78H
	MOV A, 78H
	CJNE A, #6, NEXTT
	CLR P2.6
	SJMP THIRTYHERE
	NEXTT:JNC LART
	SETB P2.6
	SJMP THIRTYHERE
	LART: CLR P2.6
	CJNE A, #20, NEXTT1
	SETB P2.6
	MOV 78H, #0
	SJMP THIRTYHERE
	NEXTT1: 
	SJMP THIRTYHERE
	THIRTYCOMP1:CLR TR0
	MOV TH0, R2
	MOV TL0, R1
	CLR P2.4
	INC R5
	SETB TR0
	RETI
FOURTY: CJNE R7, #40, FIFTY
FOURTYHERE:CJNE R5, #33, FOURTYHERE1
	SJMP FOURTYCOMP
	FOURTYHERE1: JNC FOURTYCOMP
	CLR TR0
	SETB P2.4
	;LCALL PROGRAM
	MOV TH0, R2
	MOV TL0, R1
	INC R5
	SETB TR0
	RETI
	FOURTYCOMP: CJNE R5, #83, FOURTYCOMP1
	MOV R5, #0
	SETB P2.4
	INC 78H
	MOV A, 78H
	CJNE A, #8, NEXTF
	CLR P2.6
	SJMP FOURTYHERE
	NEXTF:JNC LARF
	SETB P2.6
	SJMP FOURTYHERE
	LARF: CLR P2.6
	CJNE A, #20, NEXTF1
	SETB P2.6
	MOV 78H, #0
	SJMP FOURTYHERE
	NEXTF1: 
	SJMP FOURTYHERE
	FOURTYCOMP1:CLR TR0
	MOV TH0, R2
	MOV TL0, R1
	CLR P2.4
	INC R5
	SETB TR0
	RETI
FIFTY: CJNE R7, #50, SIXTY
FIFTYHERE:CJNE R5, #41, FIFTYHERE1 ;41.5
	SJMP FIFTYCOMP
	FIFTYHERE1: JNC FIFTYCOMP
	CLR TR0
	SETB P2.4
	;LCALL PROGRAM
	MOV TH0, R2
	MOV TL0, R1
	INC R5
	SETB TR0
	RETI
	FIFTYCOMP: CJNE R5, #83, FIFTYCOMP1
	MOV R5, #0
	SETB P2.4
	INC 78H
	MOV A, 78H
	CJNE A, #10, NEXTFI
	CLR P2.6
	SJMP FIFTYHERE
	NEXTFI:JNC LARFI
	SETB P2.6
	SJMP FIFTYHERE
	LARFI: CLR P2.6
	CJNE A, #20, NEXTFI1
	SETB P2.6
	MOV 78H, #0
	SJMP FIFTYHERE
	NEXTFI1: 
	SJMP FIFTYHERE
	FIFTYCOMP1:CLR TR0
	MOV TH0, R2
	MOV TL0, R1
	CLR P2.4
	INC R5
	SETB TR0
	RETI
SIXTY: CJNE R7, #60, SEVENTY
SIXTYHERE:CJNE R5, #50, SIXTYHERE1
	SJMP SIXTYCOMP
	SIXTYHERE1: JNC SIXTYCOMP
	CLR TR0
	SETB P2.4
	;LCALL PROGRAM
	MOV TH0, R2
	MOV TL0, R1
	INC R5
	SETB TR0
	RETI
	SIXTYCOMP: CJNE R5, #83, SIXTYCOMP1
	MOV R5, #0
	SETB P2.4
	INC 78H
	MOV A, 78H
	CJNE A, #12, NEXTS
	CLR P2.6
	SJMP SIXTYHERE
	NEXTS:JNC LARS
	SETB P2.6
	SJMP SIXTYHERE
	LARS: CLR P2.6
	CJNE A, #20, NEXTS1
	SETB P2.6
	MOV 78H, #0
	SJMP SIXTYHERE
	NEXTS1: 
	SJMP SIXTYHERE
	SIXTYCOMP1:CLR TR0
	MOV TH0, R2
	MOV TL0, R1
	CLR P2.4
	INC R5
	SETB TR0
	RETI
SEVENTY: CJNE R7, #70, EIGHTY
SEVENTYHERE:CJNE R5, #58, SEVENTYHERE1
	SJMP SEVENTYCOMP
	SEVENTYHERE1: JNC SEVENTYCOMP
	CLR TR0
	SETB P2.4
	;LCALL PROGRAM
	MOV TH0, R2
	MOV TL0, R1
	INC R5
	SETB TR0
	RETI
	SEVENTYCOMP: CJNE R5, #83, SEVENTYCOMP1
	MOV R5, #0
	SETB P2.4
	INC 78H
	MOV A, 78H
	CJNE A, #14, NEXTSE
	CLR P2.6
	SJMP SEVENTYHERE
	NEXTSE:JNC LARSE
	SETB P2.6
	SJMP SEVENTYHERE
	LARSE: CLR P2.6
	CJNE A, #20, NEXTSE1
	SETB P2.6
	MOV 78H, #0
	SJMP SEVENTYHERE
	NEXTSE1: 
	SJMP SEVENTYHERE
	SEVENTYCOMP1:CLR TR0
	MOV TH0, R2
	MOV TL0, R1
	CLR P2.4
	INC R5
	SETB TR0
	RETI
EIGHTY: 
EIGHTYHERE:CJNE R5, #66, EIGHTYHERE1
	SJMP EIGHTYCOMP
	EIGHTYHERE1: JNC EIGHTYCOMP
	CLR TR0
	SETB P2.4
	;LCALL PROGRAM
	MOV TH0, R2
	MOV TL0, R1
	INC R5
	SETB TR0
	RETI
	EIGHTYCOMP: CJNE R5, #83, EIGHTYCOMP1
	MOV R5, #0
	SETB P2.4
	INC 78H
	MOV A, 78H
	CJNE A, #16, NEXTE
	CLR P2.6
	SJMP EIGHTYHERE
	NEXTE:JNC LARE
	SETB P2.6
	SJMP EIGHTYHERE
	LARE: CLR P2.6
	CJNE A, #20, NEXTE1
	SETB P2.6
	MOV 78H, #0
	SJMP EIGHTYHERE
	NEXTE1: 
	SJMP EIGHTYHERE
	EIGHTYCOMP1:CLR TR0
	MOV TH0, R2
	MOV TL0, R1
	CLR P2.4
	INC R5
	SETB TR0
	RETI


WAVEFORM2: MOV R1, 43H
		MOV R2, 44H
TWENTY2: CJNE R7, #20, THIRTY2
TWENTYHERE2:CJNE R0, #6, TWENTYHERE12
	SJMP TWENTYCOMP2
	TWENTYHERE12: JNC TWENTYCOMP2
	CLR TR1
	SETB P2.5
	;LCALL PROGRAM
	MOV TH1, R2
	MOV TL1, R1
	INC R0
	SETB TR1
	RETI
	TWENTYCOMP2: CJNE R0, #56, TWENTYCOMP12
	MOV R0, #0
	SETB P2.5
	SJMP TWENTYHERE2
	TWENTYCOMP12:CLR TR1
	MOV TH1, R2
	MOV TL1, R1
	CLR P2.5
	INC R0
	SETB TR1
	RETI
THIRTY2: CJNE R7, #30, FOURTY2
THIRTYHERE2:CJNE R0, #8, THIRTYHERE12
	SJMP THIRTYCOMP2
	THIRTYHERE12: JNC THIRTYCOMP2
	CLR TR1
	SETB P2.5
	;LCALL PROGRAM
	MOV TH1, R2
	MOV TL1, R1
	INC R0
	SETB TR1
	RETI
	THIRTYCOMP2: CJNE R0, #56, THIRTYCOMP12
	MOV R0, #0
	SETB P2.5
	SJMP THIRTYHERE2
	THIRTYCOMP12:CLR TR1
	MOV TH1, R2
	MOV TL1, R1
	CLR P2.5
	INC R0
	SETB TR1
	RETI
FOURTY2: CJNE R7, #40, FIFTY2
FOURTYHERE2:CJNE R0, #11, FOURTYHERE12
	SJMP FOURTYCOMP2
	FOURTYHERE12: JNC FOURTYCOMP2
	CLR TR1
	SETB P2.5
	;LCALL PROGRAM
	MOV TH1, R2
	MOV TL1, R1
	INC R0
	SETB TR1
	RETI
	FOURTYCOMP2: CJNE R0, #56, FOURTYCOMP12
	MOV R0, #0
	SETB P2.5
	SJMP FOURTYHERE2
	FOURTYCOMP12:CLR TR1
	MOV TH1, R2
	MOV TL1, R1
	CLR P2.5
	INC R0
	SETB TR1
	RETI
FIFTY2: CJNE R7, #50, SIXTY2
FIFTYHERE2:CJNE R0, #14, FIFTYHERE12
	SJMP FIFTYCOMP2
	FIFTYHERE12: JNC FIFTYCOMP2
	CLR TR1
	SETB P2.5
	;LCALL PROGRAM
	MOV TH1, R2
	MOV TL1, R1
	INC R0
	SETB TR1
	RETI
	FIFTYCOMP2: CJNE R0, #56, FIFTYCOMP12
	MOV R0, #0
	SETB P2.5
	SJMP FIFTYHERE2
	FIFTYCOMP12:CLR TR1
	MOV TH1, R2
	MOV TL1, R1
	CLR P2.5
	INC R0
	SETB TR1
	RETI
SIXTY2: CJNE R7, #60, SEVENTY2
SIXTYHERE2:CJNE R0, #17, SIXTYHERE12
	SJMP SIXTYCOMP2
	SIXTYHERE12: JNC SIXTYCOMP2
	CLR TR1
	SETB P2.5
	;LCALL PROGRAM
	MOV TH1, R2
	MOV TL1, R1
	INC R0
	SETB TR1
	RETI
	SIXTYCOMP2: CJNE R0, #56, SIXTYCOMP12
	MOV R0, #0
	SETB P2.5
	SJMP SIXTYHERE2
	SIXTYCOMP12:CLR TR1
	MOV TH1, R2
	MOV TL1, R1
	CLR P2.5
	INC R0
	SETB TR1
	RETI
SEVENTY2: CJNE R7, #70, EIGHTY2
SEVENTYHERE2:CJNE R0, #20, SEVENTYHERE12
	SJMP SEVENTYCOMP2
	SEVENTYHERE12: JNC SEVENTYCOMP2
	CLR TR1
	SETB P2.5
	;LCALL PROGRAM
	MOV TH1, R2
	MOV TL1, R1
	INC R0
	SETB TR1
	RETI
	SEVENTYCOMP2: CJNE R0, #56, SEVENTYCOMP12
	MOV R0, #0
	SETB P2.5
	SJMP SEVENTYHERE2
	SEVENTYCOMP12:CLR TR1
	MOV TH1, R2
	MOV TL1, R1
	CLR P2.5
	INC R0
	SETB TR1
	RETI
EIGHTY2: 
EIGHTYHERE2:CJNE R0, #22, EIGHTYHERE12
	SJMP EIGHTYCOMP2
	EIGHTYHERE12: JNC EIGHTYCOMP2
	CLR TR1
	SETB P2.5
	;LCALL PROGRAM
	MOV TH1, R2
	MOV TL1, R1
	INC R0
	SETB TR1
	RETI
	EIGHTYCOMP2: CJNE R0, #56, EIGHTYCOMP12
	MOV R0, #0
	SETB P2.5
	SJMP EIGHTYHERE2
	EIGHTYCOMP12:CLR TR1
	MOV TH1, R2
	MOV TL1, R1
	CLR P2.5
	INC R0
	SETB TR1
	RETI
	


PROGRAM: 
	MOV DPTR ,#10000
	MOV R2, DPH
	MOV R1, DPL
;	MOV 1, R6
	LCALL DWBB
	MOV A ,#0FFH
	CLR C
	SUBB A,R1
	MOV R1,A
	MOV A ,#0FFH
	SUBB A, R2
	MOV R2, A
	MOV A, R1
	ADD A,#1
	MOV R1, A
	MOV A, R2
	ADDC A, #0
	MOV R2, A
	RET
DWBB: 
 MOV R4,#0
MOV R3,#0
AGAIN1: MOV A,R1
CLR C
SUBB A,R6
MOV R1,A
MOV A,R2
SUBB A,#0
MOV R2,A
JC EXIT
INC R3
CJNE R3,#0,AGAIN1
INC R4
SJMP AGAIN1
EXIT:MOV 2, R4
MOV 1, R3
RET



CONFIGURE_LCD:	;THIS SUBROUTINE SENDS THE INITIALIZATION COMMANDS TO THE LCD
	mov a,#38H	;TWO LINES, 5X7 MATRIX
	acall SEND_COMMAND
	mov a,#0FH	;DISPLAY ON, CURSOR BLINKING
	acall SEND_COMMAND
	mov a,#06H	;INCREMENT CURSOR (SHIFT CURSOR TO RIGHT)
	acall SEND_COMMAND
	mov a,#01H	;CLEAR DISPLAY SCREEN
	acall SEND_COMMAND
	mov a,#80H	;FORCE CURSOR TO BEGINNING OF THE FIRST LINE
	acall SEND_COMMAND
	ret
CONFIGURE_LCD2:	;THIS SUBROUTINE SENDS THE INITIALIZATION COMMANDS TO THE LCD
	mov a,#38H	;TWO LINES, 5X7 MATRIX
	acall SEND_COMMAND
	mov a,#0FH	;DISPLAY ON, CURSOR BLINKING
	acall SEND_COMMAND
	mov a,#06H	;INCREMENT CURSOR (SHIFT CURSOR TO RIGHT)
	acall SEND_COMMAND
	mov a,#0C0H	;FORCE CURSOR TO BEGINNING OF THE FIRST LINE
	acall SEND_COMMAND
	ret


SEND_COMMAND:
	mov p1,a		;THE COMMAND IS STORED IN A, SEND IT TO LCD
	clr p3.5		;RS=0 BEFORE SENDING COMMAND
	clr p3.6		;R/W=0 TO WRITE
	setb p3.7	;SEND A HIGH TO LOW SIGNAL TO ENABLE PIN
	acall DELAY
	clr p3.7
	ret


SEND_DATA:
	mov p1,a		;SEND THE DATA STORED IN A TO LCD
	setb p3.5	;RS=1 BEFORE SENDING DATA
	clr p3.6		;R/W=0 TO WRITE
	setb p3.7	;SEND A HIGH TO LOW SIGNAL TO ENABLE PIN
	acall DELAY
	clr p3.7
	ret

DELAY:
	push 0
	push 1
	mov r0,#255
DELAY_OUTER_LOOP:
	mov r1,#255
	djnz r1,$
	djnz r0,DELAY_OUTER_LOOP
	pop 1
	pop 0
	ret


KEYBOARD: ;takes the key pressed from the keyboard and puts it to A
	mov	P0, #0ffh	;makes P0 input
K1:
	mov	P2, #0	;ground all rows
	mov	A, P0
	anl	A, #00001111B
	cjne	A, #00001111B, K1
K2:
	acall	DELAY
	mov	A, P0
	anl	A, #00001111B
	cjne	A, #00001111B, KB_OVER
	sjmp	K2
KB_OVER:
	acall DELAY
	mov	A, P0
	anl	A, #00001111B
	cjne	A, #00001111B, KB_OVER1
	sjmp	K2
KB_OVER1:
	mov	P2, #11111110B
	mov	A, P0
	anl	A, #00001111B
	cjne	A, #00001111B, ROW_0
	mov	P2, #11111101B
	mov	A, P0
	anl	A, #00001111B
	cjne	A, #00001111B, ROW_1
	mov	P2, #11111011B
	mov	A, P0
	anl	A, #00001111B
	cjne	A, #00001111B, ROW_2
	mov	P2, #11110111B
	mov	A, P0
	anl	A, #00001111B
	cjne	A, #00001111B, ROW_3
	ljmp	K2
	
ROW_0:
	mov	DPTR, #KCODE0
	sjmp	KB_FIND
ROW_1:
	mov	DPTR, #KCODE1
	sjmp	KB_FIND
ROW_2:
	mov	DPTR, #KCODE2
	sjmp	KB_FIND
ROW_3:
	mov	DPTR, #KCODE3
KB_FIND:
	rrc	A
	jnc	KB_MATCH
	inc	DPTR
	sjmp	KB_FIND
KB_MATCH:
	clr	A
	movc	A, @A+DPTR; get ASCII code from the table 
	ret

;ASCII look-up table 
KCODE0:	DB	'1', '2', '3', 'A'
KCODE1:	DB	'4', '5', '6', 'B'
KCODE2:	DB	'7', '8', '9', 'C'
KCODE3:	DB	'*', '0', '#', 'D'






